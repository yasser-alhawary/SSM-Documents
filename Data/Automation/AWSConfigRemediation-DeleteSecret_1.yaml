description: |
   ### Document name - AWSConfigRemediation-DeleteSecret

   ## What does this document do?
   The AWSConfigRemediation-RotateSecret runbook deletes a secret and all of the versions stored in AWS Secrets Manager. You can optionally specify the recovery window during which you can restore the secret. If you don't specify a value for the RecoveryWindowInDays parameter, the operation defaults to 30 days using the [DeleteSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html) API.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
   * SecretId: (Required) The Amazon Resource Name (ARN) of the secret you want to rotate.
   * RecoveryWindowInDays: (Optional)
      * The number of days which you can restore the secret.
      * default: 30

   ## Output Parameters
   * DeleteSecret.DeleteSecretApiResponse: Response from the DeleteSecret API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::d{12}:role/[w+=,.@-]+
  SecretId:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the secret you want to rotate.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:secretsmanager:[a-z0-9-]*:d{12}:secret:[w-_+=.@/]*|^[w/+=.@-]{1,512}$
  RecoveryWindowInDays:
    type: Integer
    description: (Optional) The number of days which you can restore the secret.
    allowedPattern: ^[7-9]$|^[1-2][0-9]?$|^30$
    default: 30

outputs:
  - DeleteSecret.DeleteSecretApiResponse

mainSteps:
  -
    name: DeleteSecret
    action: "aws:executeAwsApi"
    description: |
      ## DeleteSecret
      Deletes the secret you specify in the SecretId parameter.
      ## Outputs
      * DeleteSecretApiResponse: Response from the DeleteSecret API call.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: secretsmanager
      Api: DeleteSecret
      SecretId: "{{ SecretId }}"
      RecoveryWindowInDays: "{{ RecoveryWindowInDays }}"
    outputs:
      - Name: DeleteSecretApiResponse
        Selector: $
        Type: StringMap

  -
    name: VerifyDeletion
    action: "aws:executeScript"
    timeoutSeconds: 600
    isEnd: true
    description: |
      ## VerifyDeletion
      Verifies the secret has been scheduled for deletion.
      ## Outputs
      * Output: Success message or failure exception.
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        SecretId: "{{ SecretId }}"
        DeleteApiResponse: "{{ DeleteSecret.DeleteSecretApiResponse }}"
      Script: |-
        import boto3

        def handler(event, context):
            secrets_manager_client = boto3.client("secretsmanager")
            secret_arn = event["SecretId"]
            deletion_date = event["DeleteApiResponse"]["DeletionDate"]

            desc_secret = secrets_manager_client.describe_secret(SecretId=secret_arn)
            if desc_secret["DeletedDate"]:
                return {
                    "output":  "Verification of DeleteSecret is successful, secret will be deleted on {}.".format(deletion_date)
                }
            raise Exception("VERIFICATION FAILED. SECRET NOT DELETED.")
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: String
