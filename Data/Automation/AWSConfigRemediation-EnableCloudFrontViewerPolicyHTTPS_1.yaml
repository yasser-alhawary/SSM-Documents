description: |
  ### Document name - AWSConfigRemediation-EnableCloudFrontViewerPolicyHTTPS

  ## What does this document do?
  This document modifies ViewerProtocolPolicy on a Amazon CloudFront distribution using the [UpdateDistribution]
  (https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_UpdateDistribution.html) API.

  ## Input Parameters
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
  * CloudFrontDistributionId: (Required) The Amazon CloudFront distribution id.
  * ViewerProtocolPolicy: (Required) The protocol that viewers can use to access the files in the origin. Valid values are "https-only" and "redirect-to-https".

  ## Output Parameters
  * UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution.Output: The standard HTTP response from the UpdateDistribution API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::d{12}:role/[w+=,.@/-]+$
  CloudFrontDistributionId:
    type: String
    description: (Required) The Amazon CloudFront distribution id.
    allowedPattern: "[A-Z0-9]*"
  ViewerProtocolPolicy:
    type: String
    description: (Required) The protocol that viewers can use to access the files in the origin.
    allowedValues:
      - "https-only"
      - "redirect-to-https"

outputs:
  - UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution.Output
mainSteps:
  -
    name: UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution
    action: "aws:executeScript"
    description: |
      ## UpdateAndVerifyViewerProtocolPolicyOfCloudFrontDistribution
      Updates and Verifies viewer protocol policy on the given Amazon CloudFront distribution.
      ## Outputs
      * Output: The standard HTTP response from the UpdateDistribution API call.
    isEnd: false
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        CloudFrontDistributionId: "{{ CloudFrontDistributionId }}"
        ViewerProtocolPolicy: "{{ ViewerProtocolPolicy }}"
      Script: |-
        import boto3

        def update_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):
          distribution_details = cloudfront_client.get_distribution(Id = cloudfront_distribution_id)
          distribution_config = distribution_details['Distribution']['DistributionConfig']
          distribution_config['DefaultCacheBehavior']['ViewerProtocolPolicy'] = viewer_protocol_policy
          update_response = cloudfront_client.update_distribution(Id=cloudfront_distribution_id, DistributionConfig=distribution_config, IfMatch=distribution_details['ETag'])
          return update_response

        def verify_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):
          distribution_details = cloudfront_client.get_distribution(Id = cloudfront_distribution_id)
          updated_viewer_protocol_policy = distribution_details['Distribution']['DistributionConfig']['DefaultCacheBehavior']['ViewerProtocolPolicy']
          if updated_viewer_protocol_policy == viewer_protocol_policy:
            return True
          return False

        def handler(event, context):
          cloudfront_client = boto3.client("cloudfront")
          cloudfront_distribution_id = event["CloudFrontDistributionId"]
          viewer_protocol_policy = event["ViewerProtocolPolicy"]

          update_response = update_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy)

          if verify_cloudfront_viewer_protocol_policy(cloudfront_client, cloudfront_distribution_id, viewer_protocol_policy):
            return {
                  "output" : {
                    "Message": "Verification of update viewer protocol policy on given Amazon CloudFront distribution {} is successful".format(cloudfront_distribution_id),
                    "HTTPResponse": update_response['ResponseMetadata']
                  }
              }
          raise Exception("VERIFICATION FAILED. UPDATE VIEWER PROTOCOL POLICY ON GIVEN AMAZON CLOUDFRONT DISTRIBUTION {} IS FAILED.".format(cloudfront_distribution_id))
    outputs:
      - Name: Output
        Selector: $.Payload.output
