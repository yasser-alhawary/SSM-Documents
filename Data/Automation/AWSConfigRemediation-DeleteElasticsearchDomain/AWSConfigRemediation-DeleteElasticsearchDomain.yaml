schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-DeleteElasticsearchDomain

   ## What does this document do?
   This runbook deletes the given Amazon Elasticsearch Service (Amazon ES) domain using the [DeleteElasticsearchDomain](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-api.html#es-configuration-api-actions-deleteelasticsearchdomain) API.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
   * DomainName: (Required) The name of the Amazon Elasticsearch service domain.

   ## Output Parameters
   * DeleteElasticsearchDomainAndVerify.Output: Success message or failure exception.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
  DomainName:
    type: String
    description: (Required) The name of the Amazon ES service domain to be deleted.
    allowedPattern: (\d{12}/)?[a-z]{1}[a-z0-9-]{2,28}
outputs:
  - DeleteElasticsearchDomainAndVerify.Output
mainSteps:
  -
    name: DeleteElasticsearchDomainAndVerify
    action: "aws:executeScript"
    description: |
      ## DeleteElasticsearchDomainAndVerify
      Accepts the Amazon ES service domain name as input, deletes it, and verifies the deletion.
      ## Outputs
      * Output: Success message or failure exception.
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        DomainName: "{{ DomainName }}"
      Script: |-
        import boto3

        def verify_es_domain_exist(es_client, domain_name):
            desc_es_domain = es_client.describe_elasticsearch_domain(DomainName=domain_name)
            if desc_es_domain["DomainStatus"]["Deleted"]:
                return False
            return True

        def delete_es_domain(es_client, domain_name):
            return es_client.delete_elasticsearch_domain(DomainName=domain_name)

        def handler(event, context):
            es_client = boto3.client("es")
            domain_name = event["DomainName"]
            if "/" in domain_name:
                domain_name = domain_name.split("/")[-1]

            response = delete_es_domain(es_client, domain_name)['ResponseMetadata']
            domain_exist = verify_es_domain_exist(es_client, domain_name)
            if not domain_exist:
                return {
                    "output": {
                        "message": "Verification of delete amazon elastic search domain is successful.",
                        "HTTPResponse": response,
                    }
                }
            raise Exception("VERIFICATION FAILED. AMAZON ELASTIC SEARCH DOMAIN NOT DELETED.")

    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
	2021-03-02T17:11:44.092000+01:00	YAML	Automation	1	AWSConfigRemediation-DeleteElasticsearchDomain	Active
