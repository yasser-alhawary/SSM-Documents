schemaVersion: "0.3"
description: |
  ### Document name - AWSConfigRemediation-DeleteRDSClusterSnapshot

  ## What does this document do?
  This runbook deletes the given Amazon Relational Database Service (Amazon RDS) cluster snapshot using the [DeleteDBClusterSnapshot](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DeleteDBClusterSnapshot.html) API.

  ## Input Parameters
  * AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
  * DBClusterSnapshotId: (Required) The Amazon RDS cluster snapshot identifier to be deleted.

  ## Output Parameters
  * DeleteDBClusterSnapshot.Response: The standard HTTP response from the DeleteDBClusterSnapshot API.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@/-]+$
  DBClusterSnapshotId:
    type: String
    description: (Required) The Amazon RDS cluster snapshot identifier to be deleted.
    allowedPattern: ^((?!-)(?!.*--)[a-zA-Z]{1}[A-Za-z0-9-]{1,63}(?<!-))?$
outputs:
  - DeleteDBClusterSnapshot.Response
mainSteps:
  -
    name: CheckDBClusterSnapshotStatus
    action: "aws:assertAwsResourceProperty"
    description: |-
      ## CheckDBClusterSnapshotStatus
      Checks if the cluster snapshot is in the available state. If it is not available, the flow ends.
    timeoutSeconds: 60
    inputs:
      Service: rds
      Api: DescribeDBClusterSnapshots
      DBClusterSnapshotIdentifier: "{{ DBClusterSnapshotId }}"
      PropertySelector: "$.DBClusterSnapshots[0].Status"
      DesiredValues:
        - available
  -
    name: DeleteDBClusterSnapshot
    action: "aws:executeAwsApi"
    description: |
      ## DeleteDBClusterSnapshot
      Deletes the given Amazon RDS cluster snapshot using the database (DB) cluster snapshot identifier.
      ## Outputs
      * Response: The standard HTTP response from the DeleteDBClusterSnapshot API.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: rds
      Api: DeleteDBClusterSnapshot
      DBClusterSnapshotIdentifier: "{{ DBClusterSnapshotId }}"
    outputs:
      - Name: Response
        Selector: $
        Type: StringMap
  -
    name: VerifyDBClusterSnapshotState
    action: "aws:executeScript"
    timeoutSeconds: 600
    isEnd: true
    description: |
      ## VerifyDBClusterSnapshotState
      Verifies that the given Amazon RDS cluster snapshot was deleted.
      ## Outputs
      * Output: The standard HTTP response from the DescribeDBClusterSnapshots API.
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        DBClusterSnapshotIdentifier: "{{ DBClusterSnapshotId }}"
      Script: |-
        import boto3

        def handler(event, context):
            rds_client = boto3.client("rds")
            snapshot_identifier = event["DBClusterSnapshotIdentifier"]
            try:
                rds_client.describe_db_cluster_snapshots(
                    DBClusterSnapshotIdentifier=snapshot_identifier
                )
                error_message = (
                    "VERIFICATION OF DELETION OF AMAZON RDS CLUSTER SNAPSHOT {} FAILED.".format(
                        snapshot_identifier
                    )
                )
                raise Exception(error_message)
            except rds_client.exceptions.DBClusterSnapshotNotFoundFault:
                return {
                    "output": {
                        "Message": "Verification of deletion of Amazon RDS Cluster snapshot is {} successful.".format(
                            snapshot_identifier
                        )
                    }
                }
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
