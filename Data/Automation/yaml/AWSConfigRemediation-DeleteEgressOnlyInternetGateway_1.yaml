schemaVersion: "0.3"
description: |
  ### Document Name - AWSConfigRemediation-DeleteEgressOnlyInternetGateway

  ## What does this document do?
  The document deletes a specified egress-only internet gateway.

  ## Input Parameters
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
  * EgressOnlyInternetGatewayId: (Required) The ID of the egress-only internet gateway to be deleted.

  ## Output Parameters
  * DeleteResponse.Output: The response of the DeleteEgressOnlyInternetGateway API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
  EgressOnlyInternetGatewayId:
    type: String
    description: (Required) The ID of the egress-only internet gateway to be deleted.
    allowedPattern: ^eigw-[a-z0-9]+$
outputs:
  - DeleteEgressOnlyInternetGateway.Output
mainSteps:
  -
    name: DeleteEgressOnlyInternetGateway
    action: aws:executeAwsApi
    description: |
      ## DeleteEgressOnlyInternetGateway
      Deletes the given egress-only internet gateway using the DeleteEgressOnlyInternetGateway API.
      ## Outputs
      * Output: The response of the DeleteEgressOnlyInternetGateway API call.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: ec2
      Api: DeleteEgressOnlyInternetGateway
      EgressOnlyInternetGatewayId: "{{ EgressOnlyInternetGatewayId }}"
    outputs:
      - Name: Output
        Selector: $
        Type: StringMap
  -
    name: VerifyEgressOnlyInternetGatewayDeletion
    action: "aws:executeScript"
    description: |
      ## VerifyEgressOnlyInternetGatewayDeletion
      Verifies that the egress-only internet gateway is deleted in the previous step.
      ## Outputs
      * Output: A success message or failure exception.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.6
      Handler: handler
      InputPayload:
        EgressOnlyInternetGatewayId: "{{ EgressOnlyInternetGatewayId }}"
      Script: |-
        import boto3
        import botocore

        def handler(event, context):
            ec2_client = boto3.client("ec2")
            egress_only_internet_gateway_id = event["EgressOnlyInternetGatewayId"]
            response = ec2_client.describe_egress_only_internet_gateways(EgressOnlyInternetGatewayIds=[egress_only_internet_gateway_id])
            if not response["EgressOnlyInternetGateways"]:
                return {"output": "Verification of delete egress-only internet gateway is successful."}
            else:
                error_message = f"VERIFICATION FAILED. EGRESS-ONLY INTERNET GATEWAY {egress_only_internet_gateway_id} DELETION UNSUCCESSFUL."
                raise Exception(error_message)
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: String	2020-10-29T16:10:23.735000+01:00	YAML	Automation	1	AWSConfigRemediation-DeleteEgressOnlyInternetGateway	Active
