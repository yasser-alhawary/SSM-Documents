schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-DeleteUnusedENI

   ## What does this document do?
   This document deletes an unused elastic network interface (ENI) in an account using the [DeleteNetworkInterface] 
   (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkInterface.html) API.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
   * NetworkInterfaceId: (Required) The ID of the elastic network interface.

   ## Output Parameters
   * DeleteENI.DeleteENIResponse: The standard HTTP response from DeleteNetworkInterface API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
  NetworkInterfaceId:
    type: String
    description: (Required) The ID of the elastic network interface.
    allowedPattern: ^eni-[a-z0-9]*$

outputs:
  - DeleteENI.DeleteENIResponse
mainSteps:
  -
    name: DeleteENI
    action: "aws:executeAwsApi"
    description: |
      ## DeleteENI
      Deletes a given elastic network interface.
      ## Outputs
      * DeleteENIResponse: The standard HTTP response from the DeleteNetworkInterface API call.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: ec2
      Api: DeleteNetworkInterface
      NetworkInterfaceId: "{{ NetworkInterfaceId }}"
    outputs:
      - Name: DeleteENIResponse
        Selector: $
        Type: StringMap
  - 
    name: VerifyENIStatus
    action: "aws:executeScript"
    description: |
      ## VerifyENIStatus
      Checks that the given elastic network interface has been deleted.
      ## Outputs
      * Output: The standard HTTP response from the DescribeNetworkInterfaces API.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.6
      Handler: handler
      InputPayload:
        NetworkInterfaceId: "{{ NetworkInterfaceId }}"
      Script: |-
        import boto3
        import botocore

        def handler(event, context):
            ec2_client = boto3.client("ec2")
            network_interface_id = event["NetworkInterfaceId"]
            try:
              describe_network_interfaces_response = ec2_client.describe_network_interfaces(NetworkInterfaceIds=[network_interface_id])
              if describe_network_interfaces_response:
                raise Exception(
                    "VERIFICATION FAILED. DELETION OF ENI {} FAILED.".format(network_interface_id)
                )
            except botocore.exceptions.ClientError as err:
              if err.response['Error']['Code'] == 'InvalidNetworkInterfaceID.NotFound':
                return {
                      "output": {
                          "message": "Verification of ENI deletion successful."
                      }
                  }
              raise err
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
	2020-12-07T23:08:43.741000+01:00	YAML	Automation	1	AWSConfigRemediation-DeleteUnusedENI	Active
