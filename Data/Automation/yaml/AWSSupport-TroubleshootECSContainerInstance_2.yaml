---
schemaVersion: "0.3"
description: "The **AWSSupport-TroubleshootECSContainerInstance** runbook helps you\
  \ troubleshoot an Amazon Elastic Compute Cloud (Amazon EC2) instance that fails\
  \ to register with an Amazon ECS cluster. This automation reviews whether the user\
  \ data for the instance contains the correct cluster information, whether the instance\
  \ profile contains the required permissions, and network configuration issues."
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    default: ""
    type: "String"
    description: "(Optional) The Amazon Resource Name (ARN) of the AWS Identity and\
      \ Access Management (IAM) role that allows Systems Manager Automation to perform\
      \ the actions on your behalf. If no role is specified, Systems Manager Automation\
      \ uses the permissions of the user that starts this runbook."
    allowedPattern: "^$|^arn:(aws|aws-cn|aws-us-gov):iam::\\d{12}:role\\/[\\w+=/,.@-]+$"
  ClusterName:
    type: "String"
    description: "(Required) The name of the Amazon ECS cluster that the instance\
      \ failed to register with."
    default: ""
    allowedPattern: "^[a-zA-Z0-9_-]{1,255}$"
  InstanceId:
    type: "String"
    description: "(Required) The ID of the Amazon EC2 instance you want to troubleshoot."
    default: ""
    allowedPattern: "^i-[a-z0-9]{8,17}$"
mainSteps:
- name: "executeChecker"
  action: "aws:executeScript"
  description: "Reviews whether the Amazon EC2 instance meets the prerequisites needed\
    \ to register with an Amazon ECS cluster."
  isCritical: true
  timeoutSeconds: 540
  inputs:
    Runtime: "python3.7"
    InputPayload:
      InstanceId: "{{InstanceId}}"
      ClusterName: "{{ClusterName}}"
    Handler: "lambda_handler"
    Script: "import boto3\n\nfrom saw_ecs.ec2 import EC2Instance\nfrom saw_ecs.cluster\
      \ import ECSCluster\nfrom saw_ecs import __main__\n\n\ndef lambda_handler(events,\
      \ context):\n    ec2_client = boto3.client(\"ec2\")\n    instance = EC2Instance(id=events[\"\
      InstanceId\"], ec2_client=ec2_client)\n    cluster = ECSCluster(name=events[\"\
      ClusterName\"])\n\n    stdout, info_codes = __main__.generate_stdout(instance,\
      \ cluster)\n\n    # return {\"statusCode\": 200, \"body\": stdout}\n    return\
      \ {\"stdout\": stdout, \"info_codes\": info_codes}\n"
    Attachment: "attachment.zip"
  outputs:
  - Name: "stdout"
    Selector: "$.Payload.stdout"
    Type: "String"
  - Name: "info_codes"
    Selector: "$.Payload.info_codes"
    Type: "StringList"
files:
  attachment.zip:
    checksums:
      sha256: "09c49f4e037e54089c8e2d121118aa851044d8eb71db9d9366e4fa332d9c2e4b"
outputs:
- "executeChecker.stdout"
	2022-04-27T18:00:30.017000+02:00	YAML	Automation	2	AWSSupport-TroubleshootECSContainerInstance	Active
ATTACHMENTSCONTENT	09c49f4e037e54089c8e2d121118aa851044d8eb71db9d9366e4fa332d9c2e4b	Sha256	attachment.zip	22523	https://aws-ssm-document-attachments-us-east-1.s3.us-east-1.amazonaws.com/941/190294270367/Automation/AWSSupport-TroubleshootECSContainerInstance%2146a7fac4-1537-4ab2-824d-64e76bd93ea1/2/attachment.zip?x-attachment-size=22523&x-requester-accountId=341329434541&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJHMEUCIAN%2FX1o4nKcfrlUhdzuUc24ftMtSBhr0r7d5DNCm3UzkAiEApmuBR%2BKTUNlad1wcDkBU9EgH3v%2FE2ydgAl%2BjsU8%2FMQYq0gQILxADGgwxODczNDA3Njk0ODUiDHzkjkEYRXw8NkHcZCqvBNamad%2FYXYH%2FsE9GGQdoWiA4Eom1HDP7v9D6ntQCbKISqj%2FVdnUeqHZ5PKAdD6GQrXu5OD7ZWnTpST5EhCFlvaHkukh1ZH1kTXEqXaFU%2FAhgsVmKNCJeynZZMeq1disWI0S8wfMnBCuhbZQzrXxt1DcypvS4dE%2FX1lzESZlpkM9zyKbnaJDycyYbf03C5aJF7AP2ujt1R1HXqbp2Gmij%2FcrWAlVyAikHa65DUVWkutppE94i06B4A0w4%2FpqjG%2FNeuAynoaHtvPk0dVsD8XhxyEkEOo0JgZ7sdij7J7kxniFu0HU6yQpwP9SXJTSR4kEynZ6M89Q4eE1NPGtdxs75tlJFyBzcdu6lzY6w8WYm542Ax05mqPkNqSHrw71VWFx4lftUYQxLAPpB7IEzMSO2A7WO5sM3ISIFTDueSAAx4wbwILec2moztujkkgfKDp%2FLYvehXYUjPAxzYjPSOL11i0MF5Ok%2B%2BQgjOZtvmjIyeqYGJ7Ez61h6CnXRlB8KRwx2oKetZBgVLYnwN5PlyLNBM9aDNjJz1TUTAjfRMuFyNv4P4sKw9%2BF1oFP2YXBBV24ArJDim3OaS5df%2BIef9%2F4lBsUUP3VA44X6fSdpHjrWNzfIIYIPhwESIfdxjb%2FujGQ0VD4x2dHOfEqhL4huckA5gY6zQN%2FDjbGaJdDGkCaJwjV441MlIh2NaD3f6DJyy2SQqajDYiSBuNX5ZSvRDtE4UMCTSvKsjrPD0GcyUIg%2BD6YwhtTJlwY6qQFSlYfnSqB64GqWFXsAYUkAtY3F1r5b9Bhb7wSC8f3Zs%2BH058YYkRAvwvCeaqfkhHYP5r5jkPqWMoy72vne6DGakGG%2BzhwdrPquvdxKCHNhfZweklV648TnALer4rw4KnfcM93%2BRQeWHKd9mhau%2FYkYMDHqYJoAzQDUFXAhQmpoe2kVTBbfGz%2F4OsjDXFjb%2FgXsnsansgN1Q25zHO0R1oDVen8bxEY7zGqU&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220809T150743Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=ASIASXHTBJDG67HV7VOK%2F20220809%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=78c2cc09e194d0393795ec51ec2632d1c48f3b077e4edb2b33eba3c6c47fb540
