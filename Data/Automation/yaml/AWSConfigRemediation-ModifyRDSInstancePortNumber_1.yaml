schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-ModifyRDSInstancePortNumber

   ## What does this document do?
   This document updates port number on a given Amazon Relational Database Service (Amazon RDS) DB instance using the 
   [ModifyDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBInstance.html) API.
   Amazon RDS DB will restart when DBPortNumber value changes regardless of the ApplyImmediately parameter value.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
   * PortNumber: (Required) The port number on which the database accepts connections. The value of the DBPortNumber parameter must not match any of the port values specified for options in the option group for the Amazon RDS DB instance. Your database will restart when you change the DBPortNumber value regardless of the value of the ApplyImmediately parameter.
   * RDSDBInstanceResourceId: (Required) The Amazon RDS DB instance resource id.

   ## Output Parameters
   * UpdateRDSPortNumber.Response: The standard HTTP response from ModifyDBInstance API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
  PortNumber:
    type: Integer
    description: (Required) The port number on which the database accepts connections. The value of the DBPortNumber parameter must not match any of the port values specified for options in the option group for the Amazon RDS DB instance. Your database will restart when you change the DBPortNumber value regardless of the value of the ApplyImmediately parameter.
    allowedPattern: ^([0]?[2-9][0-9][0-9][0-9]|[0]?1[2-9][0-9][0-9]|[0]?11[5-9][0-9]|[1-5][0-9][0-9][0-9][0-9]|6[0-4][0-9][0-9][0-9]|65[0-4][0-9][0-9]|655[0-2][0-9]|6553[0-5])$
  RDSDBInstanceResourceId:
    type: String
    description: (Required) Amazon RDS DB instance resource id.
    allowedPattern: "db-[A-Z0-9]{26}"

outputs:
  - UpdateRDSPortNumber.Response
mainSteps:
  -
    name: GetRDSInstanceIdentifier
    action: "aws:executeAwsApi"
    description: |
      ## GetRDSInstanceIdentifier
      Makes DescribeDBInstances API call using Amazon RDS DB instance resource id to get Amazon RDS DB instance identifier.
      ## Outputs
      * DbInstanceIdentifier: The Amazon RDS DB instance identifier.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: rds
      Api: DescribeDBInstances
      Filters:
        - Name: "dbi-resource-id"
          Values:
            - "{{ RDSDBInstanceResourceId }}"
    outputs:
      - Name: DbInstanceIdentifier
        Selector: $.DBInstances[0].DBInstanceIdentifier
        Type: String
  -
    name: VerifyDBInstanceStatus
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 600
    isEnd: false
    description: |
      ## VerifyDBInstanceStatus
      Verifies the given Amazon RDS DB instance status is 'available' before modifying the port number.
    inputs:
      Service: rds
      Api: DescribeDBInstances
      DBInstanceIdentifier: "{{ GetRDSInstanceIdentifier.DbInstanceIdentifier }}"
      PropertySelector: "$.DBInstances[0].DBInstanceStatus"
      DesiredValues:
        - "available"
  -
    name: UpdateRDSPortNumber
    action: "aws:executeAwsApi"
    description: |
      ## UpdateRDSPortNumber
      Makes ModifyDBInstance API call using Amazon RDS DB instance identifier and updates port number.
      ## Outputs
      * Response: The standard HTTP response from the ModifyDBInstance API call.
    timeoutSeconds: 600
    isEnd: false
    inputs:
       Service: rds
       Api: ModifyDBInstance
       DBInstanceIdentifier: "{{ GetRDSInstanceIdentifier.DbInstanceIdentifier }}"
       DBPortNumber: "{{ PortNumber }}"
    outputs:
      - Name: Response
        Selector: $
        Type: StringMap
  -
    name: VerifyDBInstanceStatusModify
    action: "aws:waitForAwsResourceProperty"
    timeoutSeconds: 600
    isEnd: false
    description: |
      ## VerifyDBInstanceStatus
      Waits for the given Amzon RDS DB instance status set to be "modifying".
    inputs:
      Service: rds
      Api: DescribeDBInstances
      DBInstanceIdentifier: "{{ GetRDSInstanceIdentifier.DbInstanceIdentifier }}"
      PropertySelector: "$.DBInstances[0].DBInstanceStatus"
      DesiredValues:
        - "modifying"
  -
    name: VerifyDBInstanceStatusAvailable
    action: "aws:waitForAwsResourceProperty"
    timeoutSeconds: 600
    isEnd: false
    description: |
      ## VerifyDBInstanceStatus
      Waits for the given Amzon RDS DB instance status set to be "available".
    inputs:
      Service: rds
      Api: DescribeDBInstances
      DBInstanceIdentifier: "{{ GetRDSInstanceIdentifier.DbInstanceIdentifier }}"
      PropertySelector: "$.DBInstances[0].DBInstanceStatus"
      DesiredValues:
        - "available"
  -
    name: VerifyRDSPortNumber
    action: "aws:executeScript"
    description: |
      ## VerifyRDSPortNumber
      Verifies the given Amazon RDS DB instance port number has been updated.
      ## Outputs
      * Output: The standard HTTP response from the DescribeDBInstances API.
    isEnd: false
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        PortNumber: "{{ PortNumber }}"
        DBIdentifier: "{{ GetRDSInstanceIdentifier.DbInstanceIdentifier }}"
      Script: |-
        import boto3

        def handler(event, context):
            rds_client = boto3.client("rds")
            db_instance_id = event["DBIdentifier"]
            port_number = event["PortNumber"]

            rds_waiter = rds_client.get_waiter("db_instance_available")
            rds_waiter.wait(DBInstanceIdentifier=db_instance_id)

            db_instances = rds_client.describe_db_instances(
                DBInstanceIdentifier=db_instance_id)

            db_port_number = db_instances['DBInstances'][0]['Endpoint']['Port']
            if db_port_number == port_number:
                return {
                      "output" : {
                        "Message": "Verification of update port number on given Amazon RDS DB instance is successful",
                        "HTTPResponse": db_instances["ResponseMetadata"]
                      }
                  }
            raise Exception("VERIFICATION FAILED. UPDATE PORT NUMBER ON GIVEN AMAZON RDS DB INSTANCE IS FAILED.")
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap	2020-12-07T23:10:19.765000+01:00	YAML	Automation	1	AWSConfigRemediation-ModifyRDSInstancePortNumber	Active
