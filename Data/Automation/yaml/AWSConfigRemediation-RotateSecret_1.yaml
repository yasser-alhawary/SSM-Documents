schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-RotateSecret

   ## What does this document do?
   This document attempts to rotate a secret stored in AWS Secrets Manager by making the [RotateSecret](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_RotateSecret.html) API.

   More information:
   [RotatingSecrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html)
   [RotateSecretPermissionsRequired](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-required-permissions.html)

   ## Input Parameters
   * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
   * SecretId: (Required) The Amazon Resource Name (ARN) of the secret.
   * RotationLambdaArn: (Required) The ARN of the AWS Lambda function that can rotate the secret.
   * RotationInterval: (Required) Specifies the number of days between automatic scheduled rotations of the secret. Must be a value between 1 and 365 days.

   ## Output Parameters
   * RotateSecret.Output: The standard HTTP response from the RotateSecret API.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@/-]+$
  SecretId:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the secret.
    allowedPattern: (arn:(aws[a-zA-Z-]*)?:secretsmanager:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(secret:)?([\w/+=.@-]+)?
  RotationLambdaArn:
    type: String
    description: (Required) The ARN of the AWS Lambda function that can rotate the secret.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z0-9-]*:\d{12}:function:[\w-]+
  RotationInterval:
    type: Integer
    description: (Required) Specifies the number of days between automatic scheduled rotations of the secret. Must be a value between 1 and 365 days.
    allowedPattern: ^[0]?[1-9][0-9]?$|^1[0-9][0-9]$|^2[0-9][0-9]$|^3[0-5][0-9]$|^36[0-5]$
outputs:
  - RotateSecret.Output
mainSteps:
  -
    name: RotateSecret
    action: "aws:executeAwsApi"
    description: |
      ## RotateSecret
      Rotates a secret with a specified value of days.
      ## Outputs
      * Output: The standard HTTP response from the RotateSecret API.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: secretsmanager
      Api: RotateSecret
      SecretId: "{{ SecretId }}"
      RotationLambdaARN: "{{ RotationLambdaArn }}"
      RotationRules:
        AutomaticallyAfterDays: "{{ RotationInterval }}"
    outputs:
      - Name: Output
        Selector: $
        Type: StringMap
  -
    name: VerifyRotateSecret
    action: "aws:executeScript"
    timeoutSeconds: 600
    isEnd: true
    description: |
      ## VerifyRotateSecret
      Verifies the secret has a rotation enabled of the specified value.
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        SecretId: "{{ SecretId }}"
        RotationInterval: "{{ RotationInterval }}"
        RotationLambdaArn: "{{ RotationLambdaArn }}"
      Script: |-
        import boto3

        def handler(event,context):
            secret_id = event["SecretId"]
            rotation_interval = event["RotationInterval"]
            rotation_lambda = event["RotationLambdaArn"]

            secrets_manager_client = boto3.client("secretsmanager")
            response = secrets_manager_client.describe_secret(SecretId=secret_id)
            configured_interval = response["RotationRules"]["AutomaticallyAfterDays"]
            configured_lambda = response["RotationLambdaARN"]
            if response["RotationEnabled"] and configured_interval == rotation_interval and configured_lambda == rotation_lambda:
                return {
                    "Message": "Verification of RotateSecret is successful.",
                    "HTTPResponse": response["ResponseMetadata"]
                }
            raise Exception("VERIFICATION OF ROTATE SECRET FAILED.")
    outputs:
      - Name: Output
        Selector: $
        Type: StringMap
