schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-DeleteLambdaFunction

   ## What does this document do?
   This document deletes a given AWS Lambda function using the [DeleteFunction](https://docs.aws.amazon.com/lambda/latest/dg/API_DeleteFunction.html) API.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
   * LambdaFunctionName: (Required) AWS Lambda function name or ARN which needs to be deleted.

   ## Output Parameters
   * DeleteAWSLambdaFunction.DeleteFunctionResponse: The standard HTTP response from the DeleteFunction API.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@/-]+$
  LambdaFunctionName:
    type: String
    description: (Required) AWS Lambda function name or ARN which needs to be deleted.
    allowedPattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?

outputs:
  - DeleteAWSLambdaFunction.DeleteFunctionResponse
mainSteps:
  -
    name: DeleteAWSLambdaFunction
    action: "aws:executeAwsApi"
    description: |
      ## DeleteAWSLambdaFunction
      Deletes the given AWS Lambda function using the DeleteFunction API.
      ## Outputs
      * DeleteFunctionResponse: Response from the DeleteFunction API.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: lambda
      Api: DeleteFunction
      FunctionName: "{{ LambdaFunctionName }}"
    outputs:
      - Name: DeleteFunctionResponse
        Selector: $
        Type: StringMap
  -
    name: VerifyAWSLambdaFunctionDeletion
    action: "aws:executeScript"
    description: |
     ## VerifyAWSLambdaFunctionDeletion
     Verifies that the AWS Lambda function is deleted in the previous step.
     ## Outputs
     * Output: Success message or failure exception.
    isEnd: true
    timeoutSeconds: 600
    inputs:
     Runtime: python3.6
     Handler: handler
     InputPayload:
       FunctionName: "{{ LambdaFunctionName }}"
     Script: |-
       import boto3
       import botocore

       def handler(event, context):
           lambda_client = boto3.client('lambda')
           function_name = event['FunctionName']
           try:
               lambda_client.get_function(FunctionName=function_name)
               error_message = f"VERIFICATION FAILED. AWS LAMBDA FUNCTION {function_name} NOT DELETED."
               raise Exception(error_message)
           except lambda_client.exceptions.ResourceNotFoundException:
               return {"output": "Verification of 'DeleteAWSLambdaFunction' is successful."}
    outputs:
     - Name: Output
       Selector: $.Payload.output
       Type: String

