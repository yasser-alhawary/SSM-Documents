description: |
  ### Document Name - AWSConfigRemediation-EnableElasticBeanstalkEnvironmentLogging

  ## What does this document do?
  This document enables logging on a given AWS Elastic Beanstalk environment using the [UpdateEnvironment](https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_UpdateEnvironment.html) API.

  ## Input Parameters
  * EnvironmentId: (Required) The ID of the AWS Elastic Beanstalk environment.
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * EnableEnvironmentLogging.EnableEnvironmentLoggingResponse - The standard HTTP response from the UpdateEnvironment API.
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@/-]+$
  EnvironmentId:
    type: String
    description: (Required) The ID of the AWS Elastic Beanstalk environment.
    allowedPattern: "^e-[a-z0-9]*$"
outputs:
  - EnableEnvironmentLogging.EnableEnvironmentLoggingResponse
mainSteps:
  - name: EnableEnvironmentLogging
    action: "aws:executeAwsApi"
    description: |
      ## EnableEnvironmentLogging
      Enables instance log streaming for the specified AWS Elastic Beanstalk environment ID.
      ## Outputs
      * EnableEnvironmentLoggingResponse: The standard HTTP response from the UpdateEnvironment API.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: elasticbeanstalk
      Api: UpdateEnvironment
      EnvironmentId: "{{ EnvironmentId }}"
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: "true"
    outputs:
      - Name: EnableEnvironmentLoggingResponse
        Selector: $
        Type: StringMap
  - name: WaitForEnvironmentAvailability
    action: aws:waitForAwsResourceProperty
    description: |
      ## WaitForEnvironmentAvailability
      Waits for the given AWS Elastic Beanstalk environment to enter the "Ready" state.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: elasticbeanstalk
      Api: DescribeEnvironments
      EnvironmentIds: 
        - "{{ EnvironmentId }}"
      PropertySelector: $.Environments[0].Status
      DesiredValues:
        - "Ready"
  - name: VerifyLogStreamingEnabled
    action: "aws:executeScript"
    description: |
      ## VerifyLogStreamingEnabled
      Checks that instance log streaming for the specified AWS Elastic Beanstalk environment is enabled.
      ## Outputs
      * Output: The standard HTTP response from the DescribeEnvironments API.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.6
      Handler: handler
      InputPayload:
        EnvironmentId: "{{ EnvironmentId }}"
      Script: |-
        import boto3

        def verify_enviroment_logging(elasticbeanstalk_client, environment_id):
          environment_list = elasticbeanstalk_client.describe_environments(
              EnvironmentIds=[environment_id]
          )
          environment_name = environment_list["Environments"][0]["EnvironmentName"]
          application_name = environment_list["Environments"][0]["ApplicationName"]

          describe_configuration_settings_response = (
              elasticbeanstalk_client.describe_configuration_settings(
                  ApplicationName=application_name, EnvironmentName=environment_name
              )
          )
          for option in describe_configuration_settings_response["ConfigurationSettings"][0][
              "OptionSettings"
          ]:
              if (
                  option["Namespace"] == "aws:elasticbeanstalk:cloudwatch:logs"
                  and option["OptionName"] == "StreamLogs"
                  and option["Value"] == "true"
              ):
                  return True
          return False

        def handler(event, context):
          elasticbeanstalk_client = boto3.client("elasticbeanstalk")
          environment_id = event["EnvironmentId"]
          if verify_enviroment_logging(elasticbeanstalk_client, environment_id):
              return {
                  "output": {
                      "Message": "Verification of instance log streaming for the AWS Elastic Beanstalk environment ID {} is successful.".format(environment_id)
                  }
              }
          raise Exception(
              "VERIFICATION FAILED. INSTANCE LOG STREAMING NOT ENABLED FOR AWS ELASTIC BEANSTALK ENVIRONMENT: {}.".format(environment_id)
          )
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
