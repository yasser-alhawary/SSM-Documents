#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: Clean S3 bucket
schemaVersion: '0.3'
assumeRole: '{{AutomationAssumeRole}}'
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf
  S3BucketNameToClean:
    type: String
    description: (Required) The name of S3 bucket to clean
mainSteps:
  - name: CleanRestoreBucket
    action: 'aws:executeScript'
    outputs:
      - Name: NumberOfDeletedObjects
        Selector: $.Payload.NumberOfDeletedObjects
        Type: Integer
    inputs:
      Runtime: python3.8
      Handler: clean_bucket
      InputPayload:
        S3BucketNameToClean: "{{S3BucketNameToClean}}"
      Script: |-
        import boto3
        from datetime import datetime
        from botocore.config import Config
        
        


        def clean_bucket(events, context):
            """
            Clean bucket by removing versioned objects and delete markers
            :return: Number of removed versioned objects and delete markers
            """
            if 'S3BucketNameToClean' not in events:
                raise KeyError('Requires S3BucketNameToClean in events')
        
            s3_bucket_name_to_clean = events['S3BucketNameToClean']
        
            print(f'Sending the list_object_versions request fore the {s3_bucket_name_to_clean} bucket...')
            config = Config(retries={'max_attempts': 20, 'mode': 'standard'})
            s3_client = boto3.client('s3', config=config)
            paginator = s3_client.get_paginator('list_object_versions')
            pages = paginator.paginate(Bucket=s3_bucket_name_to_clean)
        
            number_of_deleted_objects = 0
        
            for page in pages:
                print(f'The response from the list_object_versions: {page}')
        
                versions: list = page.get('Versions')
                if versions is not None:
                    for version in versions:
                        key = version.get('Key')
                        version_id = version.get('VersionId')
                        s3_client.delete_object(Bucket=s3_bucket_name_to_clean, Key=key, VersionId=version_id)
        
                        print(f'The versioned object with Bucket={s3_bucket_name_to_clean}, '
                              f'Key={key}, VersionId={version_id} was deleted')
        
                        number_of_deleted_objects += 1
        
                delete_markers: list = page.get('DeleteMarkers')
                if delete_markers is not None:
                    for delete_marker in delete_markers:
                        key = delete_marker.get('Key')
                        version_id = delete_marker.get('VersionId')
                        s3_client.delete_object(Bucket=s3_bucket_name_to_clean, Key=key, VersionId=version_id)
        
                        print(f'The delete marker with Bucket={s3_bucket_name_to_clean},'
                              f' Key={key}, VersionId={version_id} was deleted')
        
                        number_of_deleted_objects += 1
        
            print(f'The number of deleted versioned objects and delete markers '
                  f'in restore bucket is {number_of_deleted_objects}')
        
            return {'NumberOfDeletedObjects': number_of_deleted_objects}
        
        


