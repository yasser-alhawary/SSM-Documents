schemaVersion: "0.3"
description: |
    ### Document Name - AWSConfigRemediation-EnableEncryptionOnDynamoDbTable

    ## What does this document do?
    This document is used to enable encryption on an Amazon DynamoDB table with AWS KMS Key.

    ## Input Parameters
    * TableName: (Required) Name of the DynamoDB table.
      * Example: dynamodb-table-example
    * KMSKeyArn: (Required) ARN of the AWS KMS Key.
      * Example: arn:aws:kms:ap-southeast-2:123456789123:key/6c74f75d-c29e-4fdf-92b2-54eb6f3fd75f
    * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
      * Example: arn:aws:iam::123456789123:role/test-ssm-assume-role

    ## Output Parameters
    * UpdateTableEncryption.UpdateTableResponse: JSON formatted response from the UpdateTable API call.
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  TableName:
    description: (Required) Name of the DynamoDB table.
    type: String
    allowedPattern: "[a-zA-Z0-9_.-]{3,255}"
  KMSKeyArn:
    description: (Required) ARN of the AWS KMS Key.
    type: String
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:kms:.*:\d{12}:key/[\w+=,.@-]+
  AutomationAssumeRole:
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    type: String
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
outputs:
  - UpdateTableEncryption.UpdateTableResponse
mainSteps:
  - name: UpdateTableEncryption
    action: "aws:executeAwsApi"
    description: |
      ## UpdateTableEncryption
      Enables encyption on the Amazon DynamoDB table using UpdateTable API with the given AWS KMS key ARN.
      ## Outputs
      * UpdateTableResponse: The standard HTTP response from the UpdateTable API.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: dynamodb
      Api: UpdateTable
      TableName: "{{ TableName }}"
      SSESpecification: 
        KMSMasterKeyId: "{{ KMSKeyArn }}"
        SSEType: "KMS"
    outputs:
      - Name: UpdateTableResponse
        Selector: $
        Type: StringMap
  - name: VerifyTableEncryptionStatus
    action: aws:waitForAwsResourceProperty
    description: |
      ## VerifyTableEncryptionStatus
      Waits for the DynamoDB Table encryption status to be set to 'ENABLED'.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: dynamodb
      Api: DescribeTable
      TableName: "{{ TableName }}"
      PropertySelector: Table.SSEDescription.Status
      DesiredValues:
      - "ENABLED"
  - name: VerifyTableEncryptionKey
    action: aws:assertAwsResourceProperty
    description: |
      ## VerifyTableEncryptionKey
      Checks that the Amazon DynamoDB table is encrypted with the required KMS key ARN.
    timeoutSeconds: 600
    isEnd: true
    inputs:
      Service: dynamodb
      Api: DescribeTable
      TableName: "{{ TableName }}"
      PropertySelector: Table.SSEDescription.KMSMasterKeyArn
      DesiredValues:
      - "{{ KMSKeyArn }}"

