schemaVersion: "0.3"
description: |
   ### Document name - AWSConfigRemediation-EnableVPCFlowLogsToS3Bucket

   ## What does this document do?
   This runbook replaces an existing VPC Flow Log that publishes flow log data to Amazon CloudWatch Logs (CloudWatch Logs) with a flow log that publishes flow log data to the Amazon Simple Storage Service (Amazon S3) bucket you specify using the [CreateFlowLogs](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFlowLogs.html) and
   [DeleteVPCFlowLog](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html) APIs.

   ## Input Parameters
   * AutomationAssumeRole: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
   * FlowLogId: (Required) The ID of the flow log that publishes to CloudWatch Logs you want to replace.
   * DestinationS3BucketArn: (Required) The ARN of the Amazon S3 bucket you want to publish flow log data to.
   * MaxAggregationInterval: (Optional) The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.
     * Default: 600
     * Valid Values: 60, 600
   * TrafficType: (Required) The type of flow log data you want to record and publish.
     * Valid Values: ACCEPT, REJECT, ALL

   ## Output Parameters
   * CreateFlowLog.FlowlogId: Id of the Amazon VPC flow log created.
   * DeleteFlowLog.Response: The standard HTTP response from DeleteFlowLogs API call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that allows Systems Manager Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+
  FlowLogId:
    type: String
    description: (Required) The ID of the flow log that publishes to CloudWatch Logs you want to replace.
    allowedPattern: ^fl-[a-z0-9]{17}
  DestinationS3BucketArn:
    type: String
    description: (Required) The ARN of the Amazon S3 bucket you want to publish flow log data to.
    allowedPattern: ^arn:aws[a-z-]*:s3:::[a-z0-9]{1}[a-z0-9-.]{1,61}[a-z0-9]{1}
  MaxAggregationInterval:
    type: Integer
    description: (Optional) The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.
    default: 600
    allowedValues:
      - 60
      - 600
  TrafficType:
    type: String
    description: (Required) The type of flow log data you want to record and publish.
    allowedValues:
      - ACCEPT
      - REJECT
      - ALL
outputs:
  - CreateFlowLog.FlowlogId
  - DeleteFlowLog.Response
mainSteps:
  -
    name: GetVPCResourceId
    action: "aws:executeAwsApi"
    description: |
      ## GetVPCResourceId
      Gathers details about your VPC from the value you specify in the FlowLogId parameter.
      ## Outputs
      * ResourceId: ResourceId of Amazon VPC.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: ec2
      Api: DescribeFlowLogs
      Filters:
        - Name: "flow-log-id"
          Values:
            - "{{ FlowLogId }}"
    outputs:
      - Name: ResourceId
        Selector: $.FlowLogs[0].ResourceId
        Type: String
  -
    name: CreateFlowLog
    action: "aws:executeAwsApi"
    description: |
      ## CreateFlowLog
      Creates a flow log based on the values you specify for the runbook parameters.
      ## Outputs
      * FlowlogId: Id of the Amazon VPC flow log created.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: ec2
      Api: CreateFlowLogs
      LogDestination: "{{ DestinationS3BucketArn }}"
      LogDestinationType: s3
      ResourceType: VPC
      MaxAggregationInterval: "{{ MaxAggregationInterval }}"
      TrafficType: "{{ TrafficType }}"
      ResourceIds:
        - "{{ GetVPCResourceId.ResourceId }}"
    outputs:
      - Name: FlowlogId
        Selector: $.FlowLogIds[0]
        Type: String
  -
    name: VerifyFlowLogCreated
    action: "aws:assertAwsResourceProperty"
    timeoutSeconds: 600
    isEnd: false
    description: |
      ## VerifyFlowLogCreated
      Verifies the newly created flow log publishes to Amazon S3.
    inputs:
      Service: ec2
      Api: DescribeFlowLogs
      Filters:
        - Name: "flow-log-id"
          Values:
            - "{{ CreateFlowLog.FlowlogId }}"
      PropertySelector: FlowLogs[0].LogDestinationType
      DesiredValues:
        - s3
  -
    name: DeleteFlowLog
    action: aws:executeAwsApi
    description: |
      ## DeleteFlowLog
      Deletes the flow log that publishes to CloudWatch Logs.
      ## Outputs
      * Response: The standard HTTP response from DeleteFlowLogs API call.
    timeoutSeconds: 600
    isEnd: false
    inputs:
      Service: ec2
      Api: DeleteFlowLogs
      FlowLogIds:
        - "{{ FlowLogId }}"
    outputs:
      - Name: Response
        Selector: $
        Type: StringMap
  -
    name: VerifyFlowLogDeleted
    action: "aws:executeScript"
    description: |
      ## VerifyFlowLogDeleted
      Confirms the flow log that published to CloudWatch Logs was deleted.
      ## Outputs
      * Output: A success message or failure exception.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        FlowLogId: "{{ FlowLogId }}"
      Script: |-
        import boto3
        import botocore

        def verify_deleted_flow_log(ec2_client, deleted_flow_log_id):
            response = ec2_client.describe_flow_logs(FlowLogIds=[deleted_flow_log_id])
            if not response["FlowLogs"]:
                return True
            return False

        def handler(event, context):
            ec2_client = boto3.client("ec2")
            deleted_flow_log_id = event["FlowLogId"]

            deleted_flow_log_response = verify_deleted_flow_log(ec2_client, deleted_flow_log_id)
            if deleted_flow_log_response:
                return {
                    "output": {
                        "Message": "Verification of delete vpc flow log id '{}' is successful.".format(
                            deleted_flow_log_id
                        )
                    }
                }
            error_message = "VERIFICATION FAILED. VPC FLOW LOG '{}' DELETION UNSUCCESSFUL".format(
                deleted_flow_log_id
            )
            raise Exception(error_message)
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
