#
# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: |
  ### Document Name - AWS-RunPacker

  ## What does this document do?
  This document uses the HashiCorp [packer](https://www.packer.io/) tool to validate, fix, or build packer templates that are used to create machine images. This document is using Packer v1.7.2.

  ## Input Parameters
  * TemplateS3BucketName: The name of the Amazon S3 bucket containing the packer template.
  * TemplateFileName: The name, or key, of the template file in the S3 bucket.
  * Mode: The mode, or command, in which to use Packer when validating against the template:
      * [Build](https://www.packer.io/docs/commands/build.html): (Default) Runs all the builds within the template in order to generate a set of artifacts.
      * [Validate](https://www.packer.io/docs/commands/validate.html): Validates the syntax and configuration of the template.
      * [Fix](https://www.packer.io/docs/commands/fix.html): Finds backwards incompatible content in the template and updates it for use with the latest version of Packer. It then uploads the fixed template to the S3 bucket that you specify. The name of the fixed template is identical to the template provided by the user, but with "fixed-" prepended to the name.
  * [Force](https://www.packer.io/docs/commands/build.html#force): Forces a builder to run when artifacts from a previous build otherwise prevent a build from running.
      * True: (Default) Force flag is used
      * False: Force flag is not used
  * AutomationAssumeRole: The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * RunPackerProcessTemplate.output: The stdout from the Packer tool.
  * RunPackerProcessTemplate.fixed_template_key: The name of the template stored in an S3 bucket to use only when running in "Fix" mode.
  * RunPackerProcessTemplate.s3_bucket: The name of the S3 bucket that contains the fixed template to use only when running in "Fix" mode.
schemaVersion: '0.3'
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  TemplateS3BucketName:
    type: String
    description: "(Required) AWS S3 bucket name that stores the template. eg. my-packer-bucket"
  TemplateFileName:
    type: String
    description: "(Required) Packer template file key in the bucket. eg. path/to/packer-template.json"
  Mode:
    type: String
    description: "(Required) The mode in which to use Packer when validating against the template. Default Value - Build"
    allowedValues:
      - Validate
      - Fix
      - Build
    default: 'Build'
  Force:
    type: String
    description: "(Optional) Forces a builder to run when artifacts from a previous build otherwise prevent a build from running. Default Value - True"
    allowedValues:
      - 'True'
      - 'False'
    default: 'True'
  AutomationAssumeRole:
    type: String
    description: (Optional) The ARN of the role that allows Automation to perform the actions on your behalf.
    default: ''
outputs:
  - RunPackerProcessTemplate.output
  - RunPackerProcessTemplate.fixed_template_key
  - RunPackerProcessTemplate.s3_bucket
mainSteps:
- name: RunPackerProcessTemplate
  action: aws:executeScript
  timeoutSeconds: 600
  description: |
    ## RunPackerProcessTemplate
    Runs the selected mode against the template using the Packer tool
    ## Outputs
    * output: The stdout from the packer tool
    * Fixed_template_key: The name of the fixed template in S3 if run in "Fix" mode. No value otherwise
    * s3_bucket: The name of your s3 that contains the fixed template if run in "Fix" mode. No value otherwise
  inputs:
    Runtime: python3.8
    Handler: run_packer_handler
    Attachment: packer_1.7.2_linux_amd64.zip
    InputPayload:
        TemplateFileName: '{{TemplateFileName}}'
        TemplateS3BucketName: '{{TemplateS3BucketName}}'
        Mode: '{{Mode}}'
        Force: '{{Force}}'

    Script: |
      import os
      import glob
      import boto3
      import subprocess
      from pathlib import Path
      import json

      def get_current_dir():
        current_path = os.path.realpath(__file__)
        p = Path(current_path)
        return str(p.parent)

      def execute_packer_command(cmdArray):
        p = subprocess.Popen(cmdArray, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        out, err = [(x.decode("utf-8")) for x in p.communicate()]
        return_code = p.returncode
        if err != "":
          raise Exception("ERROR IN EXECUTING PACKER", err)
        if return_code != 0:
          raise Exception("FAILED", out)
        return out

      def download_file(path, key, bucket_name):
        s3 = boto3.client('s3')
        s3.download_file(bucket_name, key, path)

      def upload_file(path, key, bucket_name):
        s3 = boto3.client('s3')
        s3.upload_file(path, bucket_name, key)

      def validate_template(packer_cmd, template_path):
        validate_template_cmd = [packer_cmd, "validate", template_path]
        out = execute_packer_command(validate_template_cmd)
        print("Template validated successfully")
        return out

      def build_template(packer_cmd, template_path, force_build):
        build_command = [packer_cmd, "build"]
        if force_build == "True":
            build_command.extend(["-machine-readable", "-force"])
        build_command.append(template_path)
        out = execute_packer_command(build_command)
        print("Template built")
        return out

      def fix_template(packer_cmd, local_template_path, s3_template_path, bucket_name):
          s3_path_head, template_file_name = os.path.split(s3_template_path)
          fixed_template_file_name = "fixed-" + template_file_name
          fixed_template_path = os.path.join('/tmp/', fixed_template_file_name)
          fixed_template_cmd = [packer_cmd, "fix", local_template_path]
          out = execute_packer_command(fixed_template_cmd)
          fixed_template_file = open(fixed_template_path, "w")
          fixed_template_file.write(out)
          fixed_template_file.close()
          fixed_s3_key = os.path.join(s3_path_head, fixed_template_file_name)
          upload_file(fixed_template_path, fixed_s3_key, bucket_name)
          print ("Template fixed from " + s3_template_path + " to " + fixed_s3_key)
          return out, fixed_s3_key

      def run_packer_handler(events, context):
        current_dir = get_current_dir()
        packer_cmd = current_dir + "/" + "packer"
        s3_template_path = events['TemplateFileName']
        bucket_name = events['TemplateS3BucketName']
        mode = events['Mode']
        force_build = events['Force']
        s3_path_head, file_name = os.path.split(s3_template_path)
        local_template_path = os.path.join("/tmp/", file_name)
        download_file(local_template_path, s3_template_path, bucket_name)

        os.system("chmod u=x " + packer_cmd)

        fixed_template_path = ""
        ret_bucket_value = ""
        if mode == "Validate":
            out = validate_template(packer_cmd, local_template_path)
        elif mode == "Build":
            out = build_template(packer_cmd, local_template_path, force_build)
        elif mode == "Fix":
            out, fixed_template_path = fix_template(packer_cmd, local_template_path, s3_template_path, bucket_name)
            ret_bucket_value = bucket_name
        return {
          'output': json.dumps(out),
          'fixed_template_key': fixed_template_path,
          's3_bucket': ret_bucket_value
        }
  isEnd: true
  outputs:
    - Name: output
      Selector: $.Payload.output
      Type: String
    - Name: fixed_template_key
      Selector: $.Payload.fixed_template_key
      Type: String
    - Name: s3_bucket
      Selector: $.Payload.s3_bucket
      Type: String
files:
  packer_1.7.2_linux_amd64.zip:
    checksums:
      sha256: 9429c3a6f80b406dbddb9b30a4e468aeac59ab6ae4d09618c8d70c4f4188442e
    size: 28738303
...
	2022-06-22T19:11:26.828000+02:00	YAML	Automation	1	AWS-RunPacker	Active
ATTACHMENTSCONTENT	9429c3a6f80b406dbddb9b30a4e468aeac59ab6ae4d09618c8d70c4f4188442e	Sha256	packer_1.7.2_linux_amd64.zip	28738303	https://aws-ssm-document-attachments-us-east-1.s3.us-east-1.amazonaws.com/d6c/458218037161/Automation/AWS-RunPacker%21cab17208-d560-4481-84e1-a2b5189cc24b/6/packer_1.7.2_linux_amd64.zip?x-attachment-size=28738303&x-requester-accountId=341329434541&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJIMEYCIQCLW7HNjVftKRKoscZA0HwoMlh9slDy2hZdkpirsfRakQIhALGOwc7nV2KF%2BZpHzlrx7AEEelGVGuVdzUUfH5%2BNCTeZKtIECDAQAxoMMTg3MzQwNzY5NDg1IgxgfalA6WxTMF27pOYqrwTC0GVXEwdzr%2FQLKIgYEV1o8esbZjsDDRrB2deHli9IGIexuWgPFmYjMsubDuBNdovf7SxviuriBRSk5Xgfmp0h8w%2BWKE2L%2FZgmv7NYFUHX%2BSTchgNdunIkQUoGKeyvUfyLxTPlJrGo4iXxYUHqhx0oJsWO%2BfDcZYxDDcX4gfULaKssVaoPWykQrTHtCO2V%2FFH%2FtMtC7vGZ501kVQbMMzvYrgjIr60FdzMpkwweuNBm6NA0KeDD733fzzr5qk%2FNadEeXz8k2pzQ%2BLUWOoUHGrSwApHADAbjpr4Gu0UcIZlZTHP6lqjLFFjSsOgvYRFgykGYIF0fHhxz%2Fpn0U8vqPJx7WzJ6%2BpkWs2xAkXMut7%2F1vBIdBcMPpfOb754XX1OXCtBYpvtaj5DthXGkSpdYe1zbPfLuMDWSS1zwd2gnbnjb3ldVTv9WFUY75vFUVAD4SxWyvhxoGIJX6NTpXGCX8kCRDu0LuENy%2BO%2BlBa1qYSP6Wn33tYy2%2BHEvbQ49WVb3OOkfbn8vE8mhhPG0wRoLfEbO%2F1MdcQNunsf68KcHIAHW9xpGG8NGcQcMspNCI6IWK7z3bq1CxY8NzcJJHYBogzw00TBmjy1Zm%2BGkqVX6gPWQSfFfG4PObOQUpLyQ%2BmaSS127s%2BXKIAOuTCYYn%2FejknHtHkD72IKNBYcIWzobcxLgS3GaoT%2F%2BypcE1KoSQUKje5oS%2BPcKmZgBPbwpAGSE%2FS6H86hEM2gMmT%2FHfYN4laH6MJjbyZcGOqgBscdbdKPKAkUlHH9J%2FLraqQDlgClxkhcgDB%2FQUZOPT%2FJd%2Fugyo80IDwmmf3NHxJ3frrBqPnQy4gcOVUUVzhML1AV5A2%2FAmduI7q%2BNH327kAzs62WH66qkso7R%2BQq8%2FuskaPEzQOLFImFz%2BwpMxy9TdAdaCSe8MEW3cVk4Y5RYeDS8e9x1bb0y38C8XOBwOyn7S9wcrrw1Rg1w2tCtwc2wLsym03jX9NY5&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20220809T145953Z&X-Amz-SignedHeaders=host&X-Amz-Expires=86400&X-Amz-Credential=ASIASXHTBJDG6FPVH2CF%2F20220809%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Signature=24a59fa35cd459678ce3d440975bf6c747cced057aa31b5475b3fd6f368f40dd
