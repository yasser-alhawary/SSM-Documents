#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: |-
            ## Id
            AWSResilienceHub-SwitchLambdaVersionInAliasSOP_2020-10-26

            ## Intent
            Switch alias of Lambda function to another version

            ## Type
            SOP

            ## Risk
            Medium

            ## Requirements
              * Lambda Function

            ## Permissions required for AutomationAssumeRole
              * lambda:UpdateAlias

            ## Cancellation behavior
            Fail

            ## Inputs
            ### (Required) AutomationAssumeRole
              * type: String
              * description: ARN of the IAM role with permissions listed above

            ### (Required) LambdaARN
              * type: String
              * description: The ARN of the Lambda function

            ### (Required) AliasName
              * type: String
              * description: The existing alias of the Lambda function

            ### (Required) LambdaVersion
              * type: String
              * description: The Lambda version

            ## Details
            The document switches Lambda function alias to the specified version.

            ## Steps executed in normal flow
              * RecordStartTime
              * SwitchVersion
              * OutputRecoveryTime

            ## Outputs
            ### SwitchVersion.AliasArn
              * type: String
              * description: Updated Lambda alias ARN

            ### OutputRecoveryTime.RecoveryTime
              * type: Integer
              * description: Execution time in seconds

schemaVersion: "0.3"
assumeRole: "{{AutomationAssumeRole}}"
parameters:
  LambdaARN:
    type: String
    description: (Required) The ARN of the Lambda function.
  AliasName:
    type: String
    description: (Required) The existing alias of the Lambda function
  LambdaVersion:
    type: String
    description: (Required) The Lambda version
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
outputs:
  - SwitchVersion.AliasArn
  - OutputRecoveryTime.RecoveryTime
mainSteps:
  - name: RecordStartTime
    description: Start recording execution time
    action: 'aws:executeScript'
    outputs:
      - Name: StartTime
        Selector: $.Payload
        Type: String
    inputs:
      Runtime: python3.8
      Handler: start_time
      Script: |-
        import boto3
        import logging
        from datetime import datetime, timezone
        import time
        
        from botocore.exceptions import ClientError
        from dateutil import parser
        
        logger = logging.getLogger()
        logger.setLevel(logging.INFO)
        
        

        def start_time(events, context):
            return datetime.now(timezone.utc).isoformat()
        
        

  - name: WaitForLabmdaSuccessfulUpdatedStatusBeforeModification
    description: Wait for Lambda function's congifuration to be ready for update
    action: aws:waitForAwsResourceProperty
    onFailure: Abort
    timeoutSeconds: 1200
    inputs:
      Service: lambda
      Api: GetFunction
      FunctionName: "{{ LambdaARN }}"
      PropertySelector: "$.Configuration.LastUpdateStatus"
      DesiredValues:
        - "Successful"
  - name: SwitchVersion
    description: Switch alias of Lambda function to the specified version
    action: aws:executeAwsApi
    inputs:
      Service: lambda
      Api: UpdateAlias
      FunctionName: '{{ LambdaARN }}'
      Name: '{{ AliasName }}'
      FunctionVersion: '{{ LambdaVersion }}'
    outputs:
      - Name: AliasArn
        Selector: $.AliasArn
        Type: String
  - name: WaitForLabmdaSuccessfulUpdatedStatusAfterModification
    description: Wait for Lambda function's congifuration update to be applied successfully
    action: aws:waitForAwsResourceProperty
    onFailure: Abort
    timeoutSeconds: 1200
    inputs:
      Service: lambda
      Api: GetFunction
      FunctionName: "{{ LambdaARN }}"
      PropertySelector: "$.Configuration.LastUpdateStatus"
      DesiredValues:
        - "Successful"
  - name: OutputRecoveryTime
    description: Calculate execution time
    action: 'aws:executeScript'
    outputs:
      - Name: RecoveryTime
        Selector: $.Payload
        Type: Integer
    inputs:
      Runtime: python3.8
      Handler: recovery_time
      Script: |-
        import boto3
        import logging
        from datetime import datetime, timezone
        import time
        
        from botocore.exceptions import ClientError
        from dateutil import parser
        
        logger = logging.getLogger()
        logger.setLevel(logging.INFO)
        
        

        def recovery_time(events, context):
            return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds
        
        

      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'

