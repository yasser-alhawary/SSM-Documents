  ### Document name - AWSConfigRemediation-DeleteRDSInstanceSnapshot

  ## What does this document do?
  This document deletes an Amazon Relational Database Service (Amazon RDS) instance snapshot using the [DeleteDBSnapshot](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DeleteDBSnapshot.html) API. This automation document only deletes Amazon RDS instance snapshots in the `available` state. This automation document does not work on Amazon Aurora snapshots.

  ## Input Parameters
  * DbSnapshotId: (Required) The DB snapshot identifier.
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * DeleteDbSnapshot.DeleteDbSnapshotResponse: The standard HTTP response from the DeleteDBSnapshot API.
  * VerifyDbInstanceSnapshotDeletion.Output: The message to verify the deletion of Amazon RDS instance snapshot. 
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
outputs:
  - DeleteDbSnapshot.DeleteDbSnapshotResponse
  - VerifyDbInstanceSnapshotDeletion.Output
parameters:
  AutomationAssumeRole:
    type: String
    description: The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::d{12}:role/[w+=,.@-]+
  DbSnapshotId:
    type: String
    description: The DB snapshot identifier.
    allowedPattern: ^[w+=,.@_-]{1,128}$
mainSteps:
  - name: GetRDSSnapshotState
    action: "aws:executeAwsApi"
    description: |-
      ## GetRDSSnapshotState
      Makes DescribeDBSnapshots API call using the Amazon RDS instance snapshot identifier to get the snapshot status.
      ## outputs
      * IsSnapshotAvailable: The string value indicating the state of Amazon RDS instance snapshot.
    timeoutSeconds: 60
    inputs:
      Service: rds
      Api: DescribeDBSnapshots
      DBSnapshotIdentifier: "{{ DbSnapshotId }}"
    outputs:
      - Name: IsSnapshotAvailable
        Selector: "$.DBSnapshots[0].Status"
        Type: String
  - name: CheckDbInstance
    action: "aws:assertAwsResourceProperty"
    description: |-
      ## CheckDbInstance
      Checks if the Amazon RDS instance snapshot is in "available" state.
    timeoutSeconds: 60
    inputs:
      Service: rds
      Api: DescribeDBSnapshots
      DBSnapshotIdentifier: "{{ DbSnapshotId }}"
      PropertySelector: "$.DBSnapshots[0].Status"
      DesiredValues:
        - available
  - name: DeleteDbSnapshot
    action: "aws:executeAwsApi"
    description: |-
      ## DeleteDbSnapshot
      Accepts the Amazon RDS instance snapshot identifier as an input and deletes it.
      ## outputs
      * DeleteDbSnapshotResponse: The standard HTTP response from the DeleteDBSnapshot API.
    inputs:
      Service: rds
      Api: DeleteDBSnapshot
      DBSnapshotIdentifier: "{{ DbSnapshotId }}"
    outputs:
      - Name: DeleteDbSnapshotResponse
        Selector: $
        Type: StringMap
  - name: VerifyDbInstanceSnapshotDeletion
    action: "aws:executeScript"
    description: |-
      ## VerifyDbInstanceSnapshotDeletion
      Verifies the given Amazon RDS instance snapshot is deleted.
      ## outputs
      * Output: The message to verify the deletion of Amazon RDS instance snapshot.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        DbSnapshotIdentifier: "{{ DbSnapshotId }}"
      Script: |-
        import boto3
        import botocore

        def handler(event, context):
          rds_client = boto3.client("rds")
          snapshot_name = event["DbSnapshotIdentifier"]
          try:
            rds_client.describe_db_snapshots(DBSnapshotIdentifier=snapshot_name)
            error_message = f"VERIFICATION FAILED. AMAZON RDS INSTANCE SNAPSHOT {snapshot_name} NOT DELETED."
            raise Exception(error_message)
          except rds_client.exceptions.DBSnapshotNotFoundFault:
            return {
                "output":{
                    "Message": "Verification of 'DeleteRdsInstanceSnapshot' is successful."
                }
            }
    outputs:
      - Name: Output
        Selector: $.Payload.output
        Type: StringMap
