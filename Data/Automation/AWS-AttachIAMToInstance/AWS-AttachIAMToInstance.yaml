---
description: Attach IAM to Instance
schemaVersion: '0.3'
assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  InstanceId:
    type: String
    description: "(Required) The ID of the instance."
  RoleName:
    type: String
    description: "(Required) Role Name to add"
  ForceReplace:
    type: Boolean
    description: (Optional) Flag to specify whether to replace the existing iam profile or not.
    default: True
  AutomationAssumeRole:
    type: String
    description: "(Optional) The ARN of the role that allows Automation to perform
      the actions on your behalf. "
    default: ''
mainSteps:
- name: DescribeInstanceProfile # Find the iam instance profile attached to instance
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: ec2
    Api: describe_iam_instance_profile_associations
    Filters:
    - Name: instance-id
      Values:
      - "{{InstanceId}}"
  outputs:
  - Name: InstanceProfileArn
    Selector: "$.IamInstanceProfileAssociations[0].IamInstanceProfile.Arn"
    Type: String
  - Name: AssociationId
    Selector: "$.IamInstanceProfileAssociations[0].AssociationId"
    Type: String
- name: CheckInstanceProfileAssociations # Check iam instncae profile attached to instance
  action: aws:branch
  inputs:
    Choices:
    - NextStep: ListInstanceProfilesForRole # if no iam profile attached
      Not:
        Variable: "{{DescribeInstanceProfile.InstanceProfileArn}}"
        Contains: 'arn:'
    - NextStep: DisassociateIamInstanceProfile # if no instance profile attached and ForceReplace is true
      Variable: "{{ForceReplace}}"
      BooleanEquals: true # if no instance profile attached and ForceReplace is false
  isEnd: true

- name: DisassociateIamInstanceProfile # Disassociate Iam Instance Profile from instance
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: ec2
    Api: disassociate_iam_instance_profile
    AssociationId: "{{DescribeInstanceProfile.AssociationId}}"

- name: ListInstanceProfilesForRole # list Instance profiles for role  
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: iam
    Api: list_instance_profiles_for_role
    RoleName: "{{RoleName}}"
  outputs:
  - Name: InstanceProfileArn
    Selector: "$.InstanceProfiles[0].Arn"
    Type: String
  - Name: InstanceProfileName
    Selector: "$.InstanceProfiles[0].InstanceProfileName"
    Type: String
- name: CheckInstanceProfileCreated # Check if role have associated instance Profile
  action: aws:branch
  inputs:
    Choices:
    - NextStep: CreateInstanceProfileForRole # if No profile associated create 
      Not:
        Variable: "{{ListInstanceProfilesForRole.InstanceProfileArn}}"
        Contains: 'arn:'
    Default: AttachIAMProfileToInstance # if there is Iam profile assoiated to the Role
- name: AttachIAMProfileToInstance # attach Already created IAM instance Profile to instance
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: ec2
    Api: associate_iam_instance_profile
    InstanceId: "{{InstanceId}}"
    IamInstanceProfile:
      Arn: "{{ListInstanceProfilesForRole.InstanceProfileArn}}"
      Name: "{{ListInstanceProfilesForRole.InstanceProfileName}}"
  isEnd: true
  outputs:
  - Name: AssociationId
    Selector: "$.IamInstanceProfileAssociation.AssociationId"
    Type: "String"
- name: CreateInstanceProfileForRole # Create instance profile 
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: iam
    Api: create_instance_profile
    InstanceProfileName: "{{RoleName}}"
    Path: "/"
- name: AddRoleToInstanceProfile # Attach Iam instance profile to role 
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: iam
    Api: add_role_to_instance_profile
    InstanceProfileName: "{{RoleName}}"
    RoleName: "{{RoleName}}"
- name: GetInstanceProfile # Fetch Instance profile Data
  action: aws:executeAwsApi
  onFailure: Abort
  inputs:
    Service: iam
    Api: get_instance_profile
    InstanceProfileName: "{{RoleName}}"
  outputs:
  - Name: InstanceProfileArn
    Selector: "$.InstanceProfile.Arn"
    Type: String
  - Name: InstanceProfileName
    Selector: "$.InstanceProfile.InstanceProfileName"
    Type: String
- name: AttachIAMProfileToInstanceWithRetry # Attach instance profile with instance
  action: aws:executeAwsApi
  onFailure: Abort
  maxAttempts: 20 # Handle issue raised when one have just created Iam and trying to attach to instance
  timeoutSeconds: 2
  inputs:
    Service: ec2
    Api: associate_iam_instance_profile
    InstanceId: "{{InstanceId}}"
    IamInstanceProfile:
      Arn: "{{GetInstanceProfile.InstanceProfileArn}}"
      Name: "{{GetInstanceProfile.InstanceProfileName}}"
  isEnd: true
  outputs:
  - Name: AssociationId
    Selector: "$.IamInstanceProfileAssociation.AssociationId"
    Type: "String"
outputs:
- "AttachIAMProfileToInstanceWithRetry.AssociationId"
- "GetInstanceProfile.InstanceProfileName"
- "GetInstanceProfile.InstanceProfileArn"
- "AttachIAMProfileToInstance.AssociationId"
- "ListInstanceProfilesForRole.InstanceProfileName"
- "ListInstanceProfilesForRole.InstanceProfileArn"	2019-06-12T23:32:32.675000+02:00	YAML	Automation	1	AWS-AttachIAMToInstance	Active
