#
# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: |-
            ## Id
            AWSResilienceHub-ChangeLambdaConcurrencyLimitSOP_2020-10-26

            ## Intent
            Change reserved concurrent executions limit of a Lambda function

            ## Type
            SOP

            ## Risk
            Medium

            ## Requirements
              * Lambda Function

            ## Permissions required for AutomationAssumeRole
              * lambda:PutFunctionConcurrency

            ##### To log output to CloudWatch
              * logs:CreateLogStream
              * logs:PutLogEvents
              * logs:DescribeLogGroups
              * logs:DescribeLogStreams

            ## Cancellation behavior
            Fail

            ## Inputs
            ### (Required) AutomationAssumeRole
              * type: String
              * description: ARN of the IAM role with permissions listed above

            ### (Required) LambdaARN
              * type: String
              * description: The ARN of the Lambda function

            ### (Optional) NewReservedConcurrentExecutions
              * type: Integer
              * description: New reserved concurrent executions limit value
              * default: 0

            ## Details
            The document checks the amount of available concurrent executions and sets the specified value for the
            specified Lambda if it's possible.

            ## Steps executed in normal flow
              * RecordStartTime
              * PutFunctionConcurrency
              * OutputRecoveryTime

            ## Outputs
            ### SetReservedConcurrentExecutions.NewReservedConcurrencyValue
              * type: Integer
              * description: Updated reserved concurrency executions value for the specified Lambda function

            ### OutputRecoveryTime.RecoveryTime
              * type: Integer
              * description: Execution time in seconds

schemaVersion: "0.3"
assumeRole: "{{AutomationAssumeRole}}"
outputs:
  - "OutputRecoveryTime.RecoveryTime"
  - "PutFunctionConcurrency.NewReservedConcurrentExecutions"

parameters:
  LambdaARN:
    type: String
    description: (Required) The ARN of the Lambda function.
  NewReservedConcurrentExecutions:
    type: Integer
    description: (Optional) New reserved concurrent executions
    default: 0
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

mainSteps:
  - name: RecordStartTime
    description: Start recording execution time
    action: 'aws:executeScript'
    outputs:
      - Name: StartTime
        Selector: $.Payload
        Type: String
    inputs:
      Runtime: python3.8
      Handler: start_time
      Script: |-
        import boto3
        import logging
        from datetime import datetime, timezone
        import time
        
        from botocore.exceptions import ClientError
        from dateutil import parser
        
        logger = logging.getLogger()
        logger.setLevel(logging.INFO)
        
        

        def start_time(events, context):
            return datetime.now(timezone.utc).isoformat()
        
        


  - name: PutFunctionConcurrency
    description: Set new value for reserved concurrent executions
    action: aws:executeAwsApi
    inputs:
      Service: lambda
      Api: PutFunctionConcurrency
      FunctionName: '{{ LambdaARN }}'
      ReservedConcurrentExecutions: '{{ NewReservedConcurrentExecutions }}'
    outputs:
      - Name: NewReservedConcurrentExecutions
        Selector: $.ReservedConcurrentExecutions
        Type: Integer

  - name: OutputRecoveryTime
    description: Calculate execution time
    action: 'aws:executeScript'
    outputs:
      - Name: RecoveryTime
        Selector: $.Payload
        Type: Integer
    inputs:
      Runtime: python3.8
      Handler: recovery_time
      Script: |-
        import boto3
        import logging
        from datetime import datetime, timezone
        import time
        
        from botocore.exceptions import ClientError
        from dateutil import parser
        
        logger = logging.getLogger()
        logger.setLevel(logging.INFO)
        
        

        def recovery_time(events, context):
            return (datetime.now(timezone.utc) - parser.parse(events['StartTime'])).seconds
        
        

      InputPayload:
        StartTime: '{{ RecordStartTime.StartTime }}'
	2022-06-17T18:04:00.995000+02:00	YAML	Automation	3	AWSResilienceHub-ChangeLambdaConcurrencyLimitSOP_2020-10-26	Active
