  ### Document name - AWSConfigRemediation-ModifyRedshiftClusterNodeType

  ## What does this document do?
  This document modifies the node type and number of nodes for a given Amazon Redshift cluster using the [ResizeCluster](https://docs.aws.amazon.com/redshift/latest/APIReference/API_ResizeCluster.html) API.
  Note: Choose classic resize when you are resizing to a configuration that isn't available through elastic resize.
        You can't use elastic resize on single-node clusters.
        Choose RA3 node types to take advantage of improved performance and to get more storage capacity.

  ## Input Parameters
  * ClusterIdentifier: (Required) The unique identifier of the Amazon Redshift cluster.
  * NodeType: (Required) The new node type of the Amazon Redshift cluster. 
  * NumberOfNodes: (Optional) The new number of nodes of the Amazon Redshift cluster. The value must be at least 1 and no more than 100.
  * ClusterType: (Required) The new cluster type for the specified cluster.
  * Classic: (Optional) A boolean value indicating whether the resize operation is using the classic resize process.
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * ModifyAndVerifyRedshiftClusterNodeTypeAndNumber.Output - The standard HTTP response from the ResizeCluster API.
schemaVersion: "0.3"
assumeRole: "{{ AutomationAssumeRole }}"
outputs:
  - ModifyAndVerifyRedshiftClusterNodeTypeAndNumber.Output
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::d{12}:role/[w+=,.@-]+
  ClusterIdentifier:
    type: String
    description: (Required) The unique identifier of the Amazon Redshift cluster to be modified.
    allowedPattern: ^[a-z](?!.*--)[a-z0-9-]{0,62}(?<!-)$
  Classic:
    type: Boolean
    description: (Optional) A boolean value indicating whether the resize operation is using the classic resize process.
    default: false
  ClusterType:
    type: String
    description: (Required) The new cluster type for the specified cluster.
    allowedValues:
      - multi-node
      - single-node
  NodeType:
    type: String
    description: (Required) The new node type of the Amazon Redshift cluster.
    allowedValues:
      - ds2.xlarge
      - ds2.8xlarge
      - dc2.large
      - dc2.8xlarge
      - ra3.xlplus
      - ra3.4xlarge
      - ra3.16xlarge
  NumberOfNodes:
    type: Integer
    description: (Optional) The new number of nodes of the Amazon Redshift cluster. For multi-node cluster type, the value must be at least 2 and no more than 100. For single-node cluster type, leave the field empty.
    allowedPattern: ^[1-9][0-9]?$|^100$|[w]{0}
    default: 1
mainSteps:
  - name: ModifyAndVerifyRedshiftClusterNodeTypeAndNumber
    action: "aws:executeScript"
    description: |
      ## ModifyAndVerifyRedshiftClusterNodeTypeAndNumber
      Modifies and verifies cluster is resizing as configured for the given Amazon Redshift cluster.
      ## outputs
      * Output: The verification response that cluster is resizing as configured for the given Amazon Redshift cluster.
    isEnd: true
    timeoutSeconds: 600
    inputs:
      Runtime: python3.7
      Handler: handler
      InputPayload:
        cluster_identifier: "{{ ClusterIdentifier }}"
        node_type: "{{ NodeType }}"
        number_of_nodes: "{{ NumberOfNodes }}"
        cluster_type: "{{ ClusterType}}"
        classic: "{{ Classic }}"
      Script: |-
        import boto3
        import json
        import datetime
        def default(obj):
            if isinstance(obj, (datetime.date, datetime.datetime)):
                return obj.isoformat()
        def verify_cluster_node_type_number(redshift_client,cluster_identifier,cluster_type,node_type,number_of_nodes):
            response = redshift_client.describe_clusters(ClusterIdentifier=cluster_identifier)
            if ((response["Clusters"][0]["ClusterStatus"] == "resizing") or ("prep-for-resize" in  response["Clusters"][0]["ClusterStatus"])):
                return "Verification of 'ModifyRedshiftClusterNodeType' is successful."
            error = f"VERIFICATION FAILED. GIVEN AMAZON REDSHIFT CLUSTER {cluster_identifier} IS NOT RESIZING."
            raise Exception(error)

        def handler(event, context):
            redshift_client = boto3.client("redshift")
            if (event["cluster_type"] == "single-node"):
                response = redshift_client.resize_cluster(
                    ClusterIdentifier=event["cluster_identifier"],
                    ClusterType=event["cluster_type"],
                    NodeType=event["node_type"],
                    Classic=event["classic"]
                )
            else:
                response = redshift_client.resize_cluster(
                    ClusterIdentifier=event["cluster_identifier"],
                    ClusterType=event["cluster_type"],
                    NodeType=event["node_type"],
                    Classic=event["classic"],
                    NumberOfNodes=event ["number_of_nodes"]
                )
            output = verify_cluster_node_type_number(redshift_client,event["cluster_identifier"],event["cluster_type"],event["node_type"],event["number_of_nodes"])
            return {
                "output":{
                     "Message": output, 
                     "HTTPResponse":  json.dumps(response, default=default)
                 }
             }
    outputs:
      - Name: Output
        Type: StringMap
        Selector: $.Payload.output
