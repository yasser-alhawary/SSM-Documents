# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
---
description: |-
  ## Intent
  'Test that the application automatically recovers in case of a database reboot'

  ## Type
  Test

  ## Risk
  Small

  ## Requirements
    * RDS database
    * There is a canary alarm setup for application

  ## Permissions required for AutomationAssumeRole
    * rds:DescribeDBInstances
    * rds:RebootDBInstance
    * cloudwatch:DescribeAlarms

  ## Supports Rollback
  No.

  ## Cancellation behavior
  Abort.

  ## Inputs
  ### (Required) AutomationAssumeRole:
    * type: String
    * description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf

  ### (Required) DbInstanceId:
    * type: String
    * description: (Required) Identifies the db instance subject to action.

  ### (Required) CanaryAlarmName:
    * type: String
    * description: (Required) Canary Alarm which should be green within recovery time.

  ## Details
    * Reboot rds instance.
    * Assert canary alarm to be green within expected recovery time.

  ## Steps executed in normal flow
    * AssertAlarmToBeGreenBeforeTest
    * AssertInstanceInAvailableState
    * RebootDbInstance
    * WaitForAvailableState
    * AssertAlarmToBeGreen

  ## Outputs
  None

schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
parameters:
  DbInstanceId:
    type: String
    description: (Required) Identifies the db instance subject to action.
  CanaryAlarmName:
    type: String
    description: (Required) Alarm which should be green after test.
  AutomationAssumeRole:
    type: String
    description: >-
      (Required) The ARN of the role that allows Automation to perform the
      actions on your behalf.
mainSteps:
  - name: AssertAlarmToBeGreenBeforeTest
    description: Ensure alarm is green before starting test. Fail if alarm is not green within expected time.
    action: aws:waitForAwsResourceProperty
    maxAttempts: 1
    timeoutSeconds: 300
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
        - "{{CanaryAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["OK"]
  - name: AssertInstanceInAvailableState
    description: Assert instance is in available state before test.
    action: aws:assertAwsResourceProperty
    onFailure: Abort
    inputs:
      Service: rds
      Api: DescribeDBInstances
      DBInstanceIdentifier: "{{DbInstanceId}}"
      PropertySelector: "$.DBInstances[0].DBInstanceStatus"
      DesiredValues: ["available"]
  - name: RebootDbInstance
    description: Reboot rds instance.
    action: aws:executeAwsApi
    inputs:
      Service: rds
      Api: RebootDBInstance
      DBInstanceIdentifier: "{{DbInstanceId}}"
  - name: WaitForAvailableState
    description: Wait for database to be in available state.
    action: aws:waitForAwsResourceProperty
    maxAttempts: 10
    timeoutSeconds: 600
    onFailure: Abort
    inputs:
      Service: rds
      Api: DescribeDBInstances
      DBInstanceIdentifier: "{{DbInstanceId}}"
      PropertySelector: "$.DBInstances[0].DBInstanceStatus"
      DesiredValues: ["available"]
  - name: AssertAlarmToBeGreen
    description: Wait for the alarm to be green after test is complete.
    action: aws:waitForAwsResourceProperty
    maxAttempts: 10
    timeoutSeconds: 600
    onFailure: Abort
    inputs:
      Service: cloudwatch
      Api: DescribeAlarms
      AlarmNames:
      - "{{CanaryAlarmName}}"
      PropertySelector: "$.MetricAlarms[0].StateValue"
      DesiredValues: ["OK"]
    isEnd: true
