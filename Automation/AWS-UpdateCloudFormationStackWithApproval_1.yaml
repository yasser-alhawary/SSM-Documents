description: "CloudFormation Template Update - Manage updating CloudFormation Template
   from a S3 bucket."
schemaVersion: "0.3"
assumeRole: "{{AutomationAssumeRole}}"
parameters:
  StackNameOrId:
    type: "String"
    description: "(Required) Name or Unique ID of the CloudFormation stack to be updated"
  TemplateUrl:
    type: "String"
    description: "(Required) S3 bucket location of updated CloudFormation Template
       (e.g. https://s3.amazonaws.com/example/updated.template)"
  LambdaAssumeRole:
    type: "String"
    description: "(Required) The ARN of the role assumed by lambda"
  Approvers:
    type: "StringList"
    description: "(Required) IAM user or user arn of approvers for the automation
       action"
  SNSTopicArn:
    type: "String"
    description: "(Required) The SNS topic ARN used to send pending approval notification
       for updating CloudFormation Template. The SNS topic name must start with Automation."
  AutomationAssumeRole:
    type: "String"
    description: "(Optional) The ARN of the role that allows Automation to perform
       the actions on your behalf. "
    default: ""
mainSteps:
- name: "approve"
  action: "aws:approve"
  onFailure: "Abort"
  inputs:
    NotificationArn: "{{SNSTopicArn}}"
    Message: "Approval required to update CloudFormation stack: {{StackNameOrId}}"
    MinRequiredApprovals: 1
    Approvers: "{{Approvers}}"
- name: "createDocumentStack"
  action: "aws:createStack"
  inputs:
    Capabilities:
    - "CAPABILITY_IAM"
    StackName: "UpdateCFTemplateStack{{automation:EXECUTION_ID}}"
    Parameters:
    - ParameterKey: "LambdaRoleArn"
      ParameterValue: "{{LambdaAssumeRole}}"
    - ParameterKey: "LambdaName"
      ParameterValue: "UpdateCFTemplate-{{automation:EXECUTION_ID}}"
    TemplateBody: "AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  LambdaName:

          Description: The lambda function name
    Type: String
  LambdaRoleArn:

          Default: ''
    Description: The ARN of the role that allows Lambda created
       by Automation to perform
      the action on your behalf
    Type: String

      Resources:
  UpdateCFLambda:
    Properties:
      Code:
        ZipFile:
       "#
# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights

                 Reserved.
#
# Permission is hereby granted, free of charge,
       to any person
           obtaining a copy of this
# software and associated
       documentation files
           (the "Software"), to deal in the
       Software
# without restriction, including
           without limitation
       the rights to use, copy, modify,
# merge, publish,
           distribute,
       sublicense, and/or sell copies of the Software, and to
#
          
       permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE
      
           IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
       OR IMPLIED,

          # INCLUDING BUT NOT LIMITED TO THE WARRANTIES
       OF MERCHANTABILITY, FITNESS
           FOR A
# PARTICULAR PURPOSE AND
       NONINFRINGEMENT. IN NO EVENT SHALL THE
           AUTHORS OR COPYRIGHT
      n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
           LIABILITY,
       WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING
     
            FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER
      
           DEALINGS IN THE SOFTWARE.
#
import boto3


def handler(event,
       context):

          tcf = boto3.client("cloudformation")

      ntcf.update_stack(
ttStackName=event["
          StackName"
      ],
ttTemplateURL=event["TemplateUrl"],
ttCapabilities=["
      
          CAPABILITY_IAM"]
t)"
      FunctionName:
        Ref:
       LambdaName
      Handler: index.handler
      MemorySize: 128
      Role:

              Ref: LambdaRoleArn
      Runtime: python3.7
      Timeout: 60
 
         Type: AWS::Lambda::Function
"
- name: "updateCloudFormationTemplate"
  action: "aws:invokeLambdaFunction"
  inputs:
    FunctionName: "UpdateCFTemplate-{{automation:EXECUTION_ID}}"
    Payload: "{"StackName": "{{StackNameOrId}}", "TemplateUrl": "{{TemplateUrl}}"
      }"
- name: "deleteCloudFormationTemplate"
  action: "aws:deleteStack"
  inputs:
    StackName: "UpdateCFTemplateStack{{automation:EXECUTION_ID}}"
